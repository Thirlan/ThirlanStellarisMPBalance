#civic_example = {
#	playable = {}								# AND trigger, no scope; use this to prevent the civic from being selectable by the player (UI)
#	potential = {}								# requirements list, see ../readme_requirements.txt
#	possible = {}								# requirements list, see ../readme_requirements.txt
#	pickable_at_start = yes / no				# default: yes
#	modification = yes / no						# default: yes, set to no to prevent adding or removing this after creation of the empire
#
#	random_weight = { base = 5 }				# scriptable weight for randomizing a civic
#												# Note: If omitted, a default weight of 1 is used
#												# Also note: after game start, AI selection of new civics uses the below weight instead
#
#	ai_weight = { base = 5 }					# scriptable weight for AI picking civics in-game (when unlocking a new slot).
#												# Note: If omitted, a default weight of 1 is used. Not needed when "modification = no"
#
#	modifier = {}								# modifier added to the country if the civic is selected and valid
#	can_build_ruler_ship = yes / no				# default: no
#	traits = { trait = ... }					# default: empty; trait set to enforce on the primary species. They cannot be removed, but more can be added if points/picks permit
#	has_secondary_species = {					# default: none; if present, will enable secondary species customization in empire designer and will create secondary species & pops at galaxy generation time (see empire_init_create_capital_secondary_pops)
#		traits = { trait = ... }					# default: empty; trait set to enforce on the secondary species. They cannot be removed, but more can be added if points/picks permit
#	}
#	is_origin = yes / no						# default: no, set to yes if civic should be treated as an Origin
#
#	swap_type = {								# triggered name, desc, custom desc and modifiers
#		name = ...
#		description = ...
#		trigger = {								# In empire creation / galaxy setup, this has no scope. During the game, when there are actual countries existing, it is set to country scope.
#			local_human_species_class = ..		# If you want to use country scope here, you must always check is_scope_valid first (see civic_devouring_swarm), or you will get errors or it won't work as intended.
#		}
#		modifier = {							# modifier that is applied to the country when triggers are evaluated as true
#			...
#		}
#	}
#	ai_playable = {}							# Similar to "playable", for AI
#}

civic_meritocracy = {
	potential = {
		ethics = { NOT = { value = ethic_gestalt_consciousness } }
		authority = { NOT = { value = auth_corporate } }
	}
	possible = {
		authority = {
			OR = {
				text = civic_tooltip_dem_oli
				value = auth_democratic
				value = auth_oligarchic
			}
		}
	}
	random_weight = { base = @civic_default_random_weight }
	ai_weight = {
		base = @ai_civic_default_base_weight
		modifier = {
			factor = @ai_civic_personality_match_factor
			OR = {
				has_ai_personality = honorbound_warriors
				has_ai_personality = erudite_explorers
				has_ai_personality = harmonious_hierarchy
			}
		}
		modifier = {
			factor = @ai_civic_personality_mismatch_factor
			OR = {
				has_ai_personality = decadent_hierarchy
				has_ai_personality = evangelising_zealots
				has_ai_personality = fanatic_purifiers
			}
		}
		modifier = {
			factor = @ai_civic_personality_forbid_factor
			OR = {
				has_ai_personality = slaving_despots
				has_ai_personality = ruthless_capitalists
			}
		}
	}
	modifier = {
		planet_jobs_specialist_produces_mult = 0.08
	}

	swap_type = {
		trigger = {
			has_paragon_dlc = yes
		}

		modifier = {
			leader_trait_selection_options_add = 1
		}
	}
}

civic_parliamentary_system = {
	potential = {
		ethics = { NOT = { value = ethic_gestalt_consciousness } }
		authority = { NOT = { value = auth_corporate } }
	}
	possible = {
		authority = {
			value = auth_democratic
		}
	}
	random_weight = { base = @civic_default_random_weight }
	ai_weight = {
		base = @ai_civic_default_base_weight
		modifier = {
			factor = @ai_civic_personality_match_factor
			OR = {
				has_ai_personality = erudite_explorers
				has_ai_personality = peaceful_traders
				has_ai_personality = harmonious_hierarchy
			}
		}
		modifier = {
			factor = @ai_civic_personality_mismatch_factor
			OR = {
				has_ai_personality = evangelising_zealots
				has_ai_personality = ruthless_capitalists
				has_ai_personality = hegemonic_imperialists
				has_ai_personality = decadent_hierarchy
				has_ai_personality = xenophobic_isolationists
				has_ai_personality = fanatic_purifiers
			}
		}
		modifier = {
			factor = @ai_civic_personality_forbid_factor
			OR = {
				has_ai_personality = slaving_despots
			}
		}
	}
	description = "civic_tooltip_parliamentary_system_effects"
	modifier = {
		pop_factions_produces_mult = 0.30
	}
}

civic_fanatic_purifiers = {
	modification = no
	playable = { host_has_dlc = "Utopia" }
	ai_playable = { host_has_dlc = "Utopia" }
	potential = {
		ethics = { NOT = { value = ethic_gestalt_consciousness } }
		authority = { NOT = { value = auth_corporate } }
	}
	possible = {
		ethics = {
			value = ethic_fanatic_xenophobe
			OR = {
				value = ethic_militarist
				value = ethic_spiritualist
			}
		}
		civics = {
			NOR = {
				value = civic_barbaric_despoilers
				value = civic_pompous_purists
				value = civic_crusader_spirit
			}
		}
		origin = {
			NOR = {
				value = origin_syncretic_evolution
				value = origin_common_ground
				value = origin_hegemon
				value = origin_toxic_knights
				value = origin_broken_shackles
			}
		}
	}
	random_weight = {
		base = 1000
		modifier = {
			factor = 0
			NOT = { host_has_dlc = "Utopia" }
		}
	}

	description = "civic_tooltip_fanatic_purifiers_effects"
	modifier = {
		ship_fire_rate_mult = 0.15
		army_damage_mult = 0.33
		starbase_shipyard_build_cost_mult = -0.15
		country_naval_cap_mult = 0.33
	}

	swap_type = {
		trigger = {
			is_scope_valid = yes
			has_country_flag = dark_forest_achievement
		}
		description = "civic_tooltip_fanatic_purifiers_effects"
		modifier = {
			country_government_civic_points_add = 1
		}
	}
}
civic_heroic_tales = {
	playable = { host_has_dlc = "Galactic Paragons" }
	ai_playable = { host_has_dlc = "Galactic Paragons" }
	random_weight = {
		base = 4
	}
	description = "civic_heroic_tales_effects"
	potential = {
		ethics = { NOT = { value = ethic_gestalt_consciousness } }
		authority = { NOT = { value = auth_corporate } }
	}
	possible = {
	}
	modifier = {
		negative_traits_country = -1
		leaders_upkeep_mult = 0.15
	}
}

civic_memory_vault = {
	playable = { host_has_dlc = "Galactic Paragons" }
	ai_playable = { host_has_dlc = "Galactic Paragons" }
	random_weight = {
		base = 3
	}
	description = "civic_tooltip_memory_vault_effects"
	potential = {
		ethics = { NOT = { value = ethic_gestalt_consciousness } }
		authority = { NOT = { value = auth_corporate } }
	}
	possible = {
		civics = {
			NOT = {
				value = civic_memory_vault_corporate
			}
		}
	}
	modifier = {
		councilor_skill_add = 1
		leaders_upkeep_mult = 0.15
	}
}