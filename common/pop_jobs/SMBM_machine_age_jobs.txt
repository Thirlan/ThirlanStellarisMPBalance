# "CYBERNETIC CREED" ORIGIN


haruspex = {
	category = specialist

	swappable_data = {
		default = {
			condition_string = SPECIALIST_JOB_TRIGGER
			building_icon = building_temple
			icon = haruspex
		}
	}

	tags = { unity research amenities }

	possible_pre_triggers = {
		has_owner = yes
		is_sapient = yes
		is_being_purged = no
		is_being_assimilated = no
	}

	possible_precalc = can_fill_specialist_job
	possible = {
		complex_specialist_job_check_trigger = yes
		OR = {
			has_cybernetic_creed_trait = yes
			has_trait = trait_cybernetic
		}
	}

	resources = {
		category = planet_bureaucrats
		produces = {
			unity = 3
			engineering_research = 2.5
		}
		produces = {	# Reduced production to make up for the trade value
			trigger = {
				exists = owner
				owner = {
					is_megacorp = yes
				}
			}
			engineering_research = -0.5
			trade = 2
		}
		upkeep = {
			consumer_goods = 2.5
		}
	}

	triggered_planet_modifier = { # Common to all Priests
		potential = {
			always = yes
		}
		planet_amenities_add = 200
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_planet_modifier = { # Common to all Priests
		potential = {
			planet = {
				has_active_building = building_league_offices
			}
		}
		planet_amenities_add = 100
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	triggered_country_modifier = { # Common to all Priests
		potential = {
			exists = owner
			owner = { has_valid_civic = civic_efficient_bureaucracy }
		}
		country_edict_fund_add = 2
		mult = value:job_total_output_modifier|JOB|haruspex|RESOURCE|unity|
	}

	triggered_planet_modifier = {
		potential = {
			planet = {
				exists = owner
				owner = {
					has_tradition = tr_modularity_4
				}
			}
		}
		planet_jobs_worker_produces_mult = 0.02
	}

	weight = {
		weight = @specialist_job_weight
		mult = value:job_weights_multiple_resources_modifier|JOB|haruspex|RESOURCE1|unity|WEIGHT1|0.50|RESOURCE2|engineering_research|WEIGHT2|0.50|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		modifier = {
			factor = 2
			exists = owner
			owner = { has_civic = civic_exalted_priesthood }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 0.1
			is_enslaved = yes
			has_slavery_type = { type = slavery_indentured }
		}
	}

	inline_script = "jobs/automodding_priority_unity"

	promotion = {
		time = @standard_promotion_time
		effect = {
			pop_amount_change_category = {
				CATEGORY = specialist
				AMOUNT = local_pop_amount
			}
		}
	}
}

technophant = {
	category = ruler

	swappable_data = {
		default = {
			condition_string = RULER_JOB_TRIGGER
			building_icon = building_citadel_of_faith
		}
	}

	tags = { unity research amenities }

	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}

	possible_precalc = can_fill_ruler_job
	possible = {
		OR = {
			has_cybernetic_creed_trait = yes
			has_trait = trait_cybernetic
		}
	}

	resources = {
		category = planet_bureaucrats
		produces = {
			unity = 6
			engineering_research = 5
		}
		upkeep = {
			consumer_goods = 2.5
		}
	}

	triggered_planet_modifier = {
		potential = {
			always = yes
		}
		planet_amenities_add = 500
		mult = value:scripted_modifier_mult|MODIFIER|pop_job_amenities_mult|
	}

	weight = {
		weight = @ruler_job_weight

		mult = value:job_weights_multiple_resources_modifier|JOB|technophant|RESOURCE1|unity|WEIGHT1|0.80|RESOURCE2|engineering_research|WEIGHT2|0.20|
		mult = value:scripted_modifier_job_weight_mult|MODIFIER|pop_job_amenities_mult|
		modifier = {
			factor = 0.1
			has_citizenship_rights = no
			NOT = { has_trait = trait_mechanical }
		}
		# Crisis purge
		modifier = {
			factor = 0.01
			exists = planet
			exists = planet.controller
			planet.controller = {
				OR = {
					is_country_type = swarm
					is_country_type = ai_empire
				}
			}
		}
	}

	inline_script = "jobs/automodding_priority_unity"

	promotion = {
		time = @standard_promotion_time
		effect = {
			pop_amount_change_category = {
				CATEGORY = ruler
				AMOUNT = local_pop_amount
			}
		}
	}
}