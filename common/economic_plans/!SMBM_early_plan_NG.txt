# Base Early AI economic plans with NO Consumer Goods

@desire = 999

@early_energy = 30
@early_minerals = 70
@early_food = 5

@early_energy_minimum = 5
@early_minerals_minimum = 30
@early_food_minimum = 4

# Stage 2
@early_research_target = 55

# Stage 3
@early_unity_target = 40
@early_alloys_target = 25

# Crank that science up!
early_economy_plan_ng = {
	income = {
		energy = @early_energy
		minerals = @early_minerals
		food = @early_food
	}
	
	focus = {
		energy = @early_energy_minimum
		minerals = @early_minerals_minimum
		food = @early_food_minimum
	}
	
	subplan = {
		potential = {
			has_monthly_income = { resource = energy value > @early_energy_minimum }
			has_monthly_income = { resource = minerals value > @early_minerals_minimum }
			has_monthly_income = { resource = food value > @early_food_minimum }
			OR = {
				has_monthly_income = { resource = physics_research value <= @early_research_target }
				has_monthly_income = { resource = society_research value <= @early_research_target }
				has_monthly_income = { resource = engineering_research value <= @early_research_target }
			}
		}
		# Force it to build a science building! Only a science building can build physics :P
        # This seems to make it build a science building even if a dreadcamp, which has high 
        # physics is available. Adding the other types such as society and engineering can cause
        # the AI to not focus on science buildings because it will try to build temples or monuments
        # or if it has master craft civic it will build Civilian industries. Once it has built these
        # non-science buildings the weights decrease and on top of that the precious starting building
        # slots are gone, thus putting us further from the ultimate goal of building a science building.
		income = {
			physics_research = @desire
		}
		focus = {
			physics_research = @desire
		}
	}
	
	subplan = {
		potential = {
			has_monthly_income = { resource = energy value > @early_energy_minimum }
			has_monthly_income = { resource = minerals value > @early_minerals_minimum }
			has_monthly_income = { resource = food value > @early_food_minimum }
			has_monthly_income = { resource = physics_research value > @early_research_target }
			has_monthly_income = { resource = society_research value > @early_research_target }
			has_monthly_income = { resource = engineering_research value > @early_research_target }
			has_monthly_income = { resource = alloys value <= @early_alloys_target }
		}
		income = {
			alloys = @desire
		}
		focus = {
			alloys = @desire
		}
	}
	
	subplan = {
		potential = {
			has_monthly_income = { resource = energy value > @early_energy_minimum }
			has_monthly_income = { resource = minerals value > @early_minerals_minimum }
			has_monthly_income = { resource = food value > @early_food_minimum }
			has_monthly_income = { resource = physics_research value > @early_research_target }
			has_monthly_income = { resource = society_research value > @early_research_target }
			has_monthly_income = { resource = engineering_research value > @early_research_target }
			has_monthly_income = { resource = unity value <= @early_unity_target }
		}
		income = {
			unity = @early_unity_target
		}
		focus = {
			unity = @early_unity_target
		}
	}
	
	empire_size = 1.5 #admin cap is fine with being 50% over limit
	
	
	ai_weight = {
		weight = 100
		modifier = {
			factor = 0
			OR = {
				country_uses_food = no
				country_uses_consumer_goods = yes
				is_machine_empire = yes
				has_origin = origin_void_dwellers
			}
		}
		modifier = {
			factor = 0
			has_monthly_income = { resource = physics_research value > @early_research_target }
			has_monthly_income = { resource = society_research value > @early_research_target }
			has_monthly_income = { resource = engineering_research value > @early_research_target }
			has_monthly_income = { resource = unity value > @early_unity_target }
			has_monthly_income = { resource = alloys value > @early_alloys_target }
		}
	}
}